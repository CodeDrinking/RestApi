let express,loginController,RegisterController,UserController,RefreshController,ProductController,auth,admin;_1e6‍.x([["default",()=>_1e6‍.o]]);_1e6‍.w("express",[["default",["express"],function(v){express=v}]]);_1e6‍.w("../controllers",[["loginController",["loginController"],function(v){loginController=v}],["RegisterController",["RegisterController"],function(v){RegisterController=v}],["UserController",["UserController"],function(v){UserController=v}],["RefreshController",["RefreshController"],function(v){RefreshController=v}]]);_1e6‍.w("../controllers/ProductController",[["default",["ProductController"],function(v){ProductController=v}]]);_1e6‍.w("../middleware/auth",[["default",["auth"],function(v){auth=v}]]);_1e6‍.w("../middleware/admin",[["default",["admin"],function(v){admin=v}]]);





const router = express.Router();



router.post('/register' , RegisterController.register)
router.post('/login' , loginController.login)
router.get('/me',auth , UserController.me)
router.post('/refresh' ,RefreshController.refresh)
router.post('/logout' ,auth ,loginController.logout) 

router .post('/products', [auth , admin] , ProductController.store)
router.put('/products/:id' , [auth , admin] , ProductController.update)
router.delete('/products/:id' , [auth , admin] , ProductController.destroy)
router.get('/products'  , ProductController.index)



_1e6‍.d(router);